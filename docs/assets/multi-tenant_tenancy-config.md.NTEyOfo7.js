import{_ as i,c as t,o as n,a4 as e}from"./chunks/framework.ZNwHIQsX.js";const f=JSON.parse('{"title":"Configuring Multi-Tenancy in Raydium","description":"","frontmatter":{},"headers":[],"relativePath":"multi-tenant/tenancy-config.md","filePath":"multi-tenant/tenancy-config.md"}'),a={name:"multi-tenant/tenancy-config.md"},s=e('<h1 id="configuring-multi-tenancy-in-raydium" tabindex="-1">Configuring Multi-Tenancy in Raydium <a class="header-anchor" href="#configuring-multi-tenancy-in-raydium" aria-label="Permalink to &quot;Configuring Multi-Tenancy in Raydium&quot;">​</a></h1><p>Multi-tenancy in Raydium allows you to operate multiple WordPress sites from a single installation, making it ideal for managing a network of sites with centralized resources. The <code>tenancy.php</code> configuration file is pivotal in enabling and managing these capabilities. Understanding and correctly configuring this file is crucial for the successful implementation of a multi-tenant architecture.</p><h2 id="key-configuration-options" tabindex="-1">Key Configuration Options <a class="header-anchor" href="#key-configuration-options" aria-label="Permalink to &quot;Key Configuration Options&quot;">​</a></h2><h3 id="enabling-multi-tenancy" tabindex="-1">Enabling Multi-Tenancy <a class="header-anchor" href="#enabling-multi-tenancy" aria-label="Permalink to &quot;Enabling Multi-Tenancy&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ALLOW_MULTITENANT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><ul><li><strong>Purpose</strong>: Controls whether multi-tenant capabilities are activated within the framework.</li><li><strong>Default</strong>: <code>false</code>. Set to <code>true</code> to enable multi-tenancy.</li><li><strong>Implication</strong>: When enabled, the framework adjusts to support multiple tenant sites, each potentially having its own configurations and database.</li></ul><h3 id="landlord-identification" tabindex="-1">Landlord Identification <a class="header-anchor" href="#landlord-identification" aria-label="Permalink to &quot;Landlord Identification&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;LANDLORD_UUID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><ul><li><strong>Purpose</strong>: Identifies the main site or &quot;landlord&quot; in a multi-tenant setup by specifying its UUID.</li><li><strong>Default</strong>: <code>null</code>. Assign the UUID of the primary tenant to enable landlord-specific functionalities and permissions.</li></ul><h3 id="tenant-specific-configurations" tabindex="-1">Tenant-Specific Configurations <a class="header-anchor" href="#tenant-specific-configurations" aria-label="Permalink to &quot;Tenant-Specific Configurations&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;REQUIRE_TENANT_CONFIG&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><ul><li><strong>Purpose</strong>: Determines the strictness of tenant-specific configurations.</li><li><strong>Default</strong>: <code>false</code>. Setting this to <code>true</code> mandates that each tenant must have its own <code>config/{tenant_id}/app.php</code> file, enhancing security and customization.</li></ul><h3 id="customizing-web-root-directory" tabindex="-1">Customizing Web Root Directory <a class="header-anchor" href="#customizing-web-root-directory" aria-label="Permalink to &quot;Customizing Web Root Directory&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TENANCY_WEB_ROOT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;public&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> );</span></span></code></pre></div><ul><li><strong>Purpose</strong>: Overrides the default web root directory to accommodate the multi-tenant architecture.</li><li><strong>Default</strong>: <code>&#39;public&#39;</code>. Change this to specify a different directory that serves as the web root for tenant sites.</li></ul><h2 id="best-practices-for-multi-tenancy-configuration" tabindex="-1">Best Practices for Multi-Tenancy Configuration <a class="header-anchor" href="#best-practices-for-multi-tenancy-configuration" aria-label="Permalink to &quot;Best Practices for Multi-Tenancy Configuration&quot;">​</a></h2><ul><li><strong>Security and Isolation</strong>: Ensure that tenant-specific data and configurations are securely isolated to prevent data leakage between tenants.</li><li><strong>Documentation</strong>: Maintain thorough documentation for each tenant configuration to facilitate management and troubleshooting.</li><li><strong>Testing</strong>: Rigorously test multi-tenant functionalities in a controlled environment before deploying to production to ensure stability and performance.</li><li><strong>Backup and Recovery</strong>: Implement robust backup and recovery strategies to protect tenant data and configurations against loss or corruption.</li></ul><blockquote><p>The <code>tenancy.php</code> file offers a structured approach to enabling and managing multi-tenancy within Raydium-powered installations. By carefully configuring the options in this file, you can leverage the full potential of multi-tenancy, optimizing resource use and streamlining the management of multiple WordPress sites. Remember to consult the overview section of the documentation and follow best practices to ensure a secure and efficient multi-tenant environment.</p></blockquote>',18),o=[s];function l(r,c,h,d,p,u){return n(),t("div",null,o)}const k=i(a,[["render",l]]);export{f as __pageData,k as default};
