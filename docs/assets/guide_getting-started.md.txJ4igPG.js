import{_ as e,c as a,o as s,a4 as i}from"./chunks/framework.ZNwHIQsX.js";const m=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md"}'),n={name:"guide/getting-started.md"},t=i(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="try-it-online" tabindex="-1">Try It Online <a class="header-anchor" href="#try-it-online" aria-label="Permalink to &quot;Try It Online&quot;">​</a></h2><p>Currently, Raydium does not provide an online trial <a href="#">coming soon</a>. To experiment with Raydium, you&#39;ll need to set it up locally by following the installation and configuration steps outlined below.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>To get started with Raydium, make sure you have the following prerequisites:</p><ul><li>PHP version 7.4 or higher.</li><li>Composer to manage PHP dependencies.</li><li>A MySQL or MariaDB database.</li><li>Terminal access to execute Raydium and other related commands.</li><li>A text editor or IDE that supports PHP and WordPress development, such as <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> with appropriate extensions.</li></ul><p>To integrate Raydium into your WordPress project, you can install it using Composer with the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devuri/raydium</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-project-name</span></span></code></pre></div><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p>After installing Raydium, proceed by navigating to your project directory to configure your environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-project-name</span></span></code></pre></div><p>You&#39;ll need to adjust the <code>.env</code> <a href="./environment-file">environment file</a> to align with your database settings and site URL. Ensure the <code>WP_HOME</code> variable accurately reflects your site&#39;s URL.</p><h2 id="file-structure" tabindex="-1">File Structure <a class="header-anchor" href="#file-structure" aria-label="Permalink to &quot;File Structure&quot;">​</a></h2><p>Raydium provides an optimized file structure tailored for a modular and secure approach to development. It helps you maintain a clean and organized codebase, with a clear separation between the core, vendor libraries, and publicly accessible resources. Here&#39;s an overview of the default project file structure in Raydium:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>project-root/</span></span>
<span class="line"><span>├── bootstrap.php</span></span>
<span class="line"><span>├── composer.json</span></span>
<span class="line"><span>├── .env</span></span>
<span class="line"><span>├── public/</span></span>
<span class="line"><span>│   ├── index.php</span></span>
<span class="line"><span>│   ├── robots.txt</span></span>
<span class="line"><span>│   ├── wp/                   # WordPress core</span></span>
<span class="line"><span>│   │   └── index.php</span></span>
<span class="line"><span>│   └── content/              # Equivalent to wp-content</span></span>
<span class="line"><span>│       ├── mu-plugins/       # Must-Use plugins</span></span>
<span class="line"><span>│       ├── plugins/          # Regular plugins</span></span>
<span class="line"><span>│       └── themes/           # Themes</span></span>
<span class="line"><span>│           └── mytheme/      # Example theme</span></span>
<span class="line"><span>├── vendor/                   # Composer dependencies</span></span>
<span class="line"><span>└── wp-cli.yml</span></span></code></pre></div><p>Key Components:</p><ul><li><p><code>public/</code>: Serves as the web root directory of your application. It contains the WordPress core and the content directory, which are exposed to the web.</p><ul><li><code>content/</code>: Replaces the standard <code>wp-content</code> directory in WordPress. It is structured to hold your themes and plugins, segregating them from core files. <ul><li><code>mu-plugins/</code>: Houses plugins that are always activated by default and cannot be disabled through the WordPress dashboard.</li><li><code>plugins/</code>: Contains the installable plugins that can be activated or deactivated as needed.</li><li><code>themes/</code>: Stores your WordPress theme directories.</li></ul></li></ul></li><li><p><code>wp/</code>: Contains the WordPress core files. This separation ensures core files are not mixed with content or configuration files.</p></li><li><p><code>vendor/</code>: Managed by Composer, this directory is safely placed outside the public scope. It includes all PHP dependencies and libraries required by your project.</p></li><li><p><code>.env</code>: Located at the root, away from the public directory, this file stores environment variables like database credentials and API keys, keeping sensitive information out of public access.</p></li><li><p><code>bootstrap.php</code>: The bootstrapping file that initializes the application setup and environment.</p></li><li><p><code>composer.json</code>: Defines dependencies and autoload settings managed by Composer.</p></li><li><p><code>wp-cli.yml</code>: Configuration file for WP-CLI, a command-line interface for WordPress.</p></li></ul><p>This structure reinforces security by minimizing exposure of critical files and simplifies maintenance by providing a logical organization for your application&#39;s components.</p><h2 id="the-config-file" tabindex="-1">The Config File <a class="header-anchor" href="#the-config-file" aria-label="Permalink to &quot;The Config File&quot;">​</a></h2><p>In Raydium, the primary configuration is handled through the <code>.env</code> file, offering a more secure and flexible way to manage settings compared to WordPress&#39;s traditional <code>wp-config.php</code>.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sample .env file content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WP_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://yourdomain.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WP_SITEURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WP_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/wp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your_db_name&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your_db_user&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your_db_password&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DB_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span></span></code></pre></div><h2 id="source-files" tabindex="-1">Source Files <a class="header-anchor" href="#source-files" aria-label="Permalink to &quot;Source Files&quot;">​</a></h2><p>Themes and plugins will reside within the <code>public/content/themes</code> and <code>public/content/plugins</code> directories.</p><h2 id="up-and-running" tabindex="-1">Up and Running <a class="header-anchor" href="#up-and-running" aria-label="Permalink to &quot;Up and Running&quot;">​</a></h2><p>To launch your Raydium-based WordPress site, ensure your web server (such as Apache or Nginx) is correctly configured to serve your project directory. Then, visit your site&#39;s URL to go through the WordPress installation and initial setup.</p><h2 id="what-s-next" tabindex="-1">What&#39;s Next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s Next?&quot;">​</a></h2><ul><li>Dive deeper into the functionalities and features of Raydium by exploring its documentation.</li><li>Get acquainted with the modular design principles of Raydium to efficiently extend and customize it.</li><li>Connect with the Raydium community for additional support, insights, and to share your experiences and best practices.</li></ul>`,28),o=[t];function l(r,p,d,c,h,u){return s(),a("div",null,o)}const y=e(n,[["render",l]]);export{m as __pageData,y as default};
