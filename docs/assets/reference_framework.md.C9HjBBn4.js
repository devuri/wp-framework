import{_ as e,c as a,o as s,a4 as i}from"./chunks/framework.ZNwHIQsX.js";const g=JSON.parse('{"title":"WPFramework Usage Guide","description":"","frontmatter":{},"headers":[],"relativePath":"reference/framework.md","filePath":"reference/framework.md"}'),n={name:"reference/framework.md"},t=i(`<h1 id="wpframework-usage-guide" tabindex="-1">WPFramework Usage Guide <a class="header-anchor" href="#wpframework-usage-guide" aria-label="Permalink to &quot;WPFramework Usage Guide&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Raydium core is the WPFramework, a robust, secure, and modular framework designed for WordPress development. It serves as the core engine behind Raydium, providing a solid foundation for both single and multi-tenant web applications. This guide walks you through using WPFramework as a standalone package, enhancing scalability, security, and development efficiency.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Multi-Tenant Support</strong>: Facilitates the development of scalable applications with multi-tenant capabilities, allowing for customized experiences under a single WordPress installation.</li><li><strong>Modularity</strong>: Offers a structured, component-based approach to development, making your projects more manageable and extendable.</li><li><strong>Security</strong>: Integrates enhanced security measures to protect applications from common vulnerabilities.</li><li><strong>Developer Tools</strong>: Equips developers with essential tools for debugging, testing, and deployment, streamlining the development process.</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>PHP 7.4</li><li>Composer for dependency management</li><li>WordPress 5.2 or higher</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><ol><li><p><strong>Create a <code>.env</code> File</strong>: In your project&#39;s root, create a <code>.env</code> <a href="./../guide/environment-file">environment file</a> to define essential configuration constants, including database settings and other environment-specific variables.</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>WP_HOME=&#39;https://example.com&#39;</span></span>
<span class="line"><span>WP_SITEURL=&quot;\${WP_HOME}/wp&quot;</span></span>
<span class="line"><span>WP_ENVIRONMENT_TYPE=&#39;production&#39;</span></span>
<span class="line"><span>DB_NAME=&#39;wp_database&#39;</span></span>
<span class="line"><span>DB_USER=&#39;your_db_user&#39;</span></span>
<span class="line"><span>DB_PASSWORD=&#39;your_db_password&#39;</span></span>
<span class="line"><span>DB_HOST=&#39;localhost&#39;</span></span></code></pre></div></li><li><p><strong>Install WPFramework</strong>: Use Composer to install WPFramework in your project directory.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devuri/wpframework</span></span></code></pre></div></li></ol><h2 id="configuration-and-usage" tabindex="-1">Configuration and Usage <a class="header-anchor" href="#configuration-and-usage" aria-label="Permalink to &quot;Configuration and Usage&quot;">​</a></h2><p>After installation, integrate WPFramework into your WordPress setup:</p><ol><li><p><strong>Bootstrap WPFramework</strong>: Create a setparate <code>bootstrap.php</code> or include these the Initialization in your <code>wp-config.php</code> file, this will ensure framework is loaded and initialized correctly.</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Include Composer autoload.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">require_once</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __DIR__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/vendor/autoload.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Initialize WPFramework.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wpframework</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__DIR__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Override default settings if necessary.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">overrides</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Initiate WPFramework.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Set WordPress database table prefix.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$table_prefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DB_PREFIX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wp_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>Activate Multi-Tenancy (Optional)</strong>: If you&#39;re utilizing WPFramework&#39;s multi-tenancy features, ensure your <code>.env</code> file and other configurations align with multi-tenant requirements. Refer to the <a href="./../multi-tenant/overview">Multi-Tenancy Guide</a> for detailed instructions.</p></li><li><p><strong>Development and Deployment</strong>: Develop your WordPress site as usual. the framework works behind the scenes, providing a secure, scalable, and modular environment.</p></li></ol><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><p>For a comprehensive understanding of the framework&#39;s core features, configuration options, and best practices, refer to the <a href="./../guide/getting-started">Raydium Documentation</a>. The documentation provides in-depth guides, API references, and examples to assist in leveraging the framework effectively.</p><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>Contributions are welcome! Whether it&#39;s through feature suggestions, bug reporting, or direct code contributions, your involvement helps improve the framework. Check out the <a href="#">Contributing Guidelines</a> for more information on how to contribute.</p><h2 id="support" tabindex="-1">Support <a class="header-anchor" href="#support" aria-label="Permalink to &quot;Support&quot;">​</a></h2><p>Encountering issues or have questions? Open an issue on our <a href="#">GitHub repository</a>, and we&#39;ll be happy to assist.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>WPFramework is open-sourced software licensed under the <a href="https://github.com/devuri/wpframework/blob/master/LICENSE" target="_blank" rel="noreferrer">MIT License</a>.</p>`,20),r=[t];function o(l,p,h,d,c,u){return s(),a("div",null,r)}const m=e(n,[["render",o]]);export{g as __pageData,m as default};
