import{_ as i,c as e,o as a,a4 as n}from"./chunks/framework.ZNwHIQsX.js";const g=JSON.parse('{"title":"Configuration Guide","description":"","frontmatter":{},"headers":[],"relativePath":"customization/app-config.md","filePath":"customization/app-config.md"}'),o={name:"customization/app-config.md"},t=n(`<h1 id="configuration-guide" tabindex="-1">Configuration Guide <a class="header-anchor" href="#configuration-guide" aria-label="Permalink to &quot;Configuration Guide&quot;">​</a></h1><p>This guide explains how to modify the configuration options of the framework used in this project. The configuration options are defined in the <code>configs/app.php</code> file.</p><h2 id="using-environment-variables" tabindex="-1">Using Environment Variables <a class="header-anchor" href="#using-environment-variables" aria-label="Permalink to &quot;Using Environment Variables&quot;">​</a></h2><p>Most configuration values can be set using environment variables defined in the <code>.env</code> file. This approach provides flexibility and allows easy customization for different environments.</p><h2 id="accessing-configuration-options" tabindex="-1">Accessing Configuration Options <a class="header-anchor" href="#accessing-configuration-options" aria-label="Permalink to &quot;Accessing Configuration Options&quot;">​</a></h2><p>Configuration options can be accessed in two ways:</p><ol><li><p><strong>Using the <code>config()</code> Helper Function:</strong> This function provides easy access to the configuration values throughout the application.</p></li><li><p><strong>Using the <code>get_config()</code> Method:</strong> This method, available in the framework&#39;s Kernel, returns the configuration options as an array.</p></li></ol><h2 id="configuration-options-overview" tabindex="-1">Configuration Options Overview <a class="header-anchor" href="#configuration-options-overview" aria-label="Permalink to &quot;Configuration Options Overview&quot;">​</a></h2><p>The <code>configs/app.php</code> config file contains various configuration options organized into sections. Here&#39;s a brief overview of some key sections:</p><h3 id="error-handler" tabindex="-1">Error Handler <a class="header-anchor" href="#error-handler" aria-label="Permalink to &quot;Error Handler&quot;">​</a></h3><ul><li>Defines the error handler for the project.</li><li>Can be set to &#39;oops&#39;, &#39;symfony&#39;, or <code>false</code> to disable error handling.</li></ul><h3 id="directory-structure" tabindex="-1">Directory Structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;Directory Structure&quot;">​</a></h3><ul><li>Defines the directory structure for the project, including web root, content directory, plugins directory, etc.</li></ul><h3 id="default-theme" tabindex="-1">Default Theme <a class="header-anchor" href="#default-theme" aria-label="Permalink to &quot;Default Theme&quot;">​</a></h3><ul><li>Sets the default fallback theme for the project.</li></ul><h3 id="security-settings" tabindex="-1">Security Settings <a class="header-anchor" href="#security-settings" aria-label="Permalink to &quot;Security Settings&quot;">​</a></h3><ul><li>Contains various security settings to enhance the security of the application.</li></ul><h3 id="email-smtp-configuration" tabindex="-1">Email SMTP Configuration <a class="header-anchor" href="#email-smtp-configuration" aria-label="Permalink to &quot;Email SMTP Configuration&quot;">​</a></h3><ul><li>Configures the mailer settings for sending emails using different providers such as Brevo, Postmark, SendGrid, Mailgun, and SES.</li></ul><h3 id="redis-cache-configuration" tabindex="-1">Redis Cache Configuration <a class="header-anchor" href="#redis-cache-configuration" aria-label="Permalink to &quot;Redis Cache Configuration&quot;">​</a></h3><ul><li>Contains configuration settings for the Redis cache integration in WordPress.</li></ul><h3 id="public-key" tabindex="-1">Public Key <a class="header-anchor" href="#public-key" aria-label="Permalink to &quot;Public Key&quot;">​</a></h3><ul><li>Represents a public key used for encryption or verification purposes.</li></ul><h2 id="modifying-configuration-options" tabindex="-1">Modifying Configuration Options <a class="header-anchor" href="#modifying-configuration-options" aria-label="Permalink to &quot;Modifying Configuration Options&quot;">​</a></h2><p>To modify the configuration options:</p><ol><li>Open the <code>app.php</code> file located in the project&#39;s root <code>configs</code> directory.</li><li>Find the section containing the configuration option you want to modify.</li><li>Update the value according to your requirements.</li><li>Save the file.</li></ol><h2 id="using-environment-variables-1" tabindex="-1">Using Environment Variables <a class="header-anchor" href="#using-environment-variables-1" aria-label="Permalink to &quot;Using Environment Variables&quot;">​</a></h2><p>If you prefer to use environment variables:</p><ol><li>Open the <code>.env</code> file located in the project&#39;s root directory.</li><li>Set the desired environment variable(s) corresponding to the configuration option(s) you want to modify.</li><li>Save the file.</li></ol><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>To illustrate, let&#39;s say you want to modify the default theme:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// app.php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;default_theme&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DEFAULT_THEME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fallback-theme&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Other configuration options...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>and then in your <code>.env</code>:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># .env</span></span>
<span class="line"><span>DEFAULT_THEME=my-custom-theme</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>Always ensure to follow best practices and security guidelines when modifying configuration options.</li><li>Make sure to test the changes, especially in different environments.</li></ul><h2 id="full-configuration-example" tabindex="-1">Full Configuration Example <a class="header-anchor" href="#full-configuration-example" aria-label="Permalink to &quot;Full Configuration Example&quot;">​</a></h2><p>check out full Configuration example: <a href="./../reference/configuration.html">Config Reference</a></p>`,38),s=[t];function r(l,c,h,u,p,d){return a(),e("div",null,s)}const m=i(o,[["render",r]]);export{g as __pageData,m as default};
